[
["single-cell-trees.html", "4 Single-Cell Trees", " 4 Single-Cell Trees Function used to generate the trees using ape::fastme.bal() is make_single_cell_tree. Trees generated from the following function are provided in the directory extdata/trees make_single_cell_tree &lt;- function(tumor_log_segratio, ploidy_VAL_diploid = 2, tumor_ploidy_VAL, tree_fun = &quot;fastme.bal&quot;, dist_metric = &quot;manhattan&quot;) { &#39;%!in%&#39; &lt;- function(x,y)!(&#39;%in%&#39;(x,y)) if (tree_fun %!in% c(&quot;nj&quot;, &quot;fastme.bal&quot;)) { stop(&quot;Please input a valid tree function. Accepted values are &#39;nj&#39; or &#39;fastme.bal&#39;&quot;) } normal_long &lt;- tibble( C1 = rep.int(1e-3, nrow(tumor_log_segratio)), C2 = rep.int(1e-3, nrow(tumor_log_segratio)), C3 = rep.int(1e-3, nrow(tumor_log_segratio)), C4 = rep.int(1e-3, nrow(tumor_log_segratio)) ) normal_long &lt;- as.data.frame(t(normal_long)) n_ploidy &lt;- ploidy_scale(ploidy_VAL_diploid, normal_long) rownames(n_ploidy) &lt;- rownames(normal_long) # tumor_long &lt;- create_popseg_long(popseg_tumor) # tumor cells only t_ploidy &lt;- ploidy_scale(tumor_ploidy_VAL, tumor_log_segratio) # combining normal and tumor cells combined &lt;- rbind(n_ploidy, t_ploidy) if (tree_fun == &quot;nj&quot;) { tree &lt;- ape::nj(amap::Dist(combined, method=dist_metric, nbproc = 40)) return(tree) } if (tree_fun == &quot;fastme.bal&quot;) { tree &lt;- ape::fastme.bal(amap::Dist(combined, method=dist_metric, nbproc = 40)) return(tree) } } tn1_tree &lt;- read.tree(here(&quot;extdata/trees/tn1_sc_tree.tree&quot;)) tn2_tree &lt;- read.tree(here(&quot;extdata/trees/tn2_sc_tree.tree&quot;)) tn3_tree &lt;- read.tree(here(&quot;extdata/trees/tn3_sc_tree.tree&quot;)) tn4_tree &lt;- read.tree(here(&quot;extdata/trees/tn4_sc_tree.tree&quot;)) tn5_tree &lt;- read.tree(here(&quot;extdata/trees/tn5_sc_tree.tree&quot;)) tn6_tree &lt;- read.tree(here(&quot;extdata/trees/tn6_sc_tree.tree&quot;)) tn7_tree &lt;- read.tree(here(&quot;extdata/trees/tn7_sc_tree.tree&quot;)) tn8_tree &lt;- read.tree(here(&quot;extdata/trees/tn8_sc_tree.tree&quot;)) source(here(&quot;R/plot_sctree.R&quot;)) plot_sctree(tn1_tree, title = &quot;TN1&quot;) ## Warning: `data_frame()` is deprecated as of tibble 1.1.0. ## Please use `tibble()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_warnings()` to see where this warning was generated. ## Warning: `mutate_()` is deprecated as of dplyr 0.7.0. ## Please use `mutate()` instead. ## See vignette(&#39;programming&#39;) for more help ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_warnings()` to see where this warning was generated. plot_sctree(tn2_tree, title = &quot;TN2&quot;) plot_sctree(tn3_tree, title = &quot;TN3&quot;) plot_sctree(tn4_tree, title = &quot;TN4&quot;, anno_y = 1450) plot_sctree(tn5_tree, title = &quot;TN5&quot;, anno_y = 1350) plot_sctree(tn6_tree, title = &quot;TN6&quot;, anno_y = 1550) plot_sctree(tn7_tree, title = &quot;TN7&quot;, anno_y = 1550) plot_sctree(tn8_tree, title = &quot;TN8&quot;) tn1_dist_nodes &lt;- calc_sctree_dists(tn1_tree) %&gt;% mutate(sample = &quot;TN1&quot;) tn2_dist_nodes &lt;- calc_sctree_dists(tn2_tree) %&gt;% mutate(sample = &quot;TN2&quot;) tn3_dist_nodes &lt;- calc_sctree_dists(tn3_tree) %&gt;% mutate(sample = &quot;TN3&quot;) tn4_dist_nodes &lt;- calc_sctree_dists(tn4_tree) %&gt;% mutate(sample = &quot;TN4&quot;) tn5_dist_nodes &lt;- calc_sctree_dists(tn5_tree) %&gt;% mutate(sample = &quot;TN5&quot;) tn6_dist_nodes &lt;- calc_sctree_dists(tn6_tree) %&gt;% mutate(sample = &quot;TN6&quot;) tn7_dist_nodes &lt;- calc_sctree_dists(tn7_tree) %&gt;% mutate(sample = &quot;TN7&quot;) tn8_dist_nodes &lt;- calc_sctree_dists(tn8_tree) %&gt;% mutate(sample = &quot;TN8&quot;) tumors_dist_nodes &lt;- bind_rows( tn1_dist_nodes, tn2_dist_nodes, tn3_dist_nodes, tn4_dist_nodes, tn5_dist_nodes, tn6_dist_nodes, tn7_dist_nodes, tn8_dist_nodes ) sc_trees_dist_plots &lt;- tumors_dist_nodes %&gt;% gather(key = &quot;evolution&quot;, value = &quot;manhattan_dist&quot;, -sample, -truncal_node) %&gt;% ggplot(aes(y = manhattan_dist, x = fct_relevel(sample, rev(gtools::mixedsort(tumors_dist_nodes$sample))))) + geom_linerange(aes(ymin = 0, ymax = manhattan_dist, group = evolution), position = position_dodge(width = .5)) + geom_point(aes(color = evolution, group = evolution), position = position_dodge(width = .5), size = 4) + coord_flip() + scale_y_continuous(expand = c(0,0)) + scale_color_paletteer_d(&quot;ggthemes::hc_default&quot;) + labs(y = &quot;manhattan distance&quot;, color = &quot;&quot;, x = &quot;&quot;) + theme_cowplot() sc_trees_dist_plots "]
]
